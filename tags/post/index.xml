<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>post on Franck Cornu</title><link>https://blog.franckcornu.com/tags/post/</link><description>Recent content in post on Franck Cornu</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright Franck Cornu @ 2022</copyright><lastBuildDate>Tue, 01 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.franckcornu.com/tags/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Build a company wide documentation platform with Azure Application Gateway and Microsoft Search</title><link>https://blog.franckcornu.com/post/manage-org-documentation-app-gateway/</link><pubDate>Tue, 01 Apr 2025 00:00:00 +0000</pubDate><guid>https://blog.franckcornu.com/post/manage-org-documentation-app-gateway/</guid><description>Managing technical knowledge within a company, especially in large organizations with numerous teams, can be incredibly challenging. Often, project or technical content that could benefit various teams is scattered across multiple locations and presented in diverse formats. This dispersion makes the information difficult to access, hard to navigate, and, in some cases, completely hidden from others.</description></item><item><title>Use the Microsoft Graph API as a Copilot plugin for a declarative agent</title><link>https://blog.franckcornu.com/post/copilot-graph-api-qna-plugin/</link><pubDate>Thu, 16 Jan 2025 00:00:00 +0000</pubDate><guid>https://blog.franckcornu.com/post/copilot-graph-api-qna-plugin/</guid><description>Recently, I came across an interesting use case building an HR agent allowing employees to ask common questions about company internal policies. These policies were made available to Copilot through a custom Graph Connector. However, during our tests, we realized for some questions, Copilot was struggling answering correctly even though answers were present in FAQ documents alongside the policy itself.</description></item><item><title>Leverage PnP Modern Search Core components and Microsoft Search in your Docusaurus documentation</title><link>https://blog.franckcornu.com/post/integrate-components-with-docusaurus/</link><pubDate>Fri, 03 Jan 2025 00:00:00 +0000</pubDate><guid>https://blog.franckcornu.com/post/integrate-components-with-docusaurus/</guid><description>In this blog post, I show you how to integrate the PnP Modern Search Core components into your enterprise Docusaurus documentation sites to add search capability.
The GitHub solution associated to this post is available here: https://github.com/microsoft-search/pnp-modern-search-core-components/tree/main/samples/docusaurus
What is Docusaurus? Docusaurus (https://docusaurus.io/) is a static site generator created by Facebook and implemented with React.</description></item><item><title>Hey Copilot, what about my metadata?</title><link>https://blog.franckcornu.com/post/copilot-studio-and-metata/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><guid>https://blog.franckcornu.com/post/copilot-studio-and-metata/</guid><description>In this blog post, I wanted to share with you a use case I came across regarding my recent experience with Copilot Studio.
DISCLAIMER I&amp;rsquo;m not an &amp;ldquo;AI expert&amp;rdquo; by any means, just a developer who consumes AI services which is not quite the same :D.
IMPORTANT UPDATE (23/08/2024) I had the confirmation from Microsoft that custom Copilots built through Copilot Studio do not leverage the user or tenants semantic index.</description></item><item><title>Use TailwindCSS with SPFx</title><link>https://blog.franckcornu.com/post/using-tailwindcss-with-spfx/</link><pubDate>Wed, 27 Mar 2024 00:00:00 +0000</pubDate><guid>https://blog.franckcornu.com/post/using-tailwindcss-with-spfx/</guid><description>The GitHub solution showcasing the integration is available here: https://github.com/FranckyC/spfx-tailwind-sample/tree/develop To handle CSS customizations, the SharePoint framework comes with a prebuilt mechanism in its toolchain. Basically, all SASS or CSS stylesheets can be treated as TypeScript modules (ex: mycomponent.module.scss). This way, you can directly reference classes in your components using a styles variable imported from the generated .</description></item><item><title>New sort feature with the 4.6.0 PnP Modern Search version!</title><link>https://blog.franckcornu.com/post/modern-search-overview-sort-control/</link><pubDate>Fri, 08 Apr 2022 00:00:00 +0000</pubDate><guid>https://blog.franckcornu.com/post/modern-search-overview-sort-control/</guid><description>Since the 4.6.0 version of the PnP Modern Search solution, you can now configure sort fields for SharePoint/Microsoft Search data sources for both default sort and user sort (i.e sort results from the UI). As a result the previous &amp;ldquo;Edit sort order&amp;rdquo; option for data sources has been renamed to &amp;ldquo;Edit sort settings&amp;rdquo;.</description></item><item><title>PnP Modern Search: focus on item selection feature</title><link>https://blog.franckcornu.com/post/modern-search-focus-item-selection/</link><pubDate>Sun, 13 Feb 2022 00:00:00 +0000</pubDate><guid>https://blog.franckcornu.com/post/modern-search-focus-item-selection/</guid><description>In the latest release of PnP Modern Search (4.5.3), we&amp;rsquo;ve added the ability to connect two Search Results Web Parts together. It went quite unnoticed at the time but it actually unlocks a lot of cool new scenarios requiring dynamic filtering, for instance, to build dynamic dashboards experiences. In this article I will review how this works and how you can benefit from this feature for your search pages.</description></item></channel></rss>